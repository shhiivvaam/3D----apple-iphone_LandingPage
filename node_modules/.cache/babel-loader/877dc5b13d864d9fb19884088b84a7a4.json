{"ast":null,"code":"import * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { MeshLine, MeshLineMaterial } from 'meshline';\nimport { AxisArrow } from './AxisArrow.js';\nimport { PlaneSlider } from './PlaneSlider.js';\nimport { AxisRotator } from './AxisRotator.js';\nimport { context } from './context.js';\nconst tV0 = new THREE.Vector3();\nconst tV1 = new THREE.Vector3();\nconst tV2 = new THREE.Vector3();\nconst getPoint2 = (point3, camera, size) => {\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  camera.updateMatrixWorld(false);\n  const vector = point3.project(camera);\n  vector.x = vector.x * widthHalf + widthHalf;\n  vector.y = -(vector.y * heightHalf) + heightHalf;\n  return vector;\n};\nconst getPoint3 = function (point2, camera, size) {\n  let zValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  const vector = tV0.set(point2.x / size.width * 2 - 1, -(point2.y / size.height) * 2 + 1, zValue);\n  vector.unproject(camera);\n  return vector;\n};\nconst calculateScaleFactor = (point3, radiusPx, camera, size) => {\n  const point2 = getPoint2(tV2.copy(point3), camera, size);\n  let scale = 0;\n  for (let i = 0; i < 2; ++i) {\n    const point2off = tV1.copy(point2).setComponent(i, point2.getComponent(i) + radiusPx);\n    const point3off = getPoint3(point2off, camera, size, point2off.z);\n    scale = Math.max(scale, point3.distanceTo(point3off));\n  }\n  return scale;\n};\nconst mL0 = new THREE.Matrix4();\nconst mW0 = new THREE.Matrix4();\nconst mP = new THREE.Matrix4();\nconst mPInv = new THREE.Matrix4();\nconst mW = new THREE.Matrix4();\nconst mL = new THREE.Matrix4();\nconst mL0Inv = new THREE.Matrix4();\nconst mdL = new THREE.Matrix4();\nconst bb = new THREE.Box3();\nconst bbObj = new THREE.Box3();\nconst vCenter = new THREE.Vector3();\nconst vSize = new THREE.Vector3();\nconst vAnchorOffset = new THREE.Vector3();\nconst vPosition = new THREE.Vector3();\nconst xDir = new THREE.Vector3(1, 0, 0);\nconst yDir = new THREE.Vector3(0, 1, 0);\nconst zDir = new THREE.Vector3(0, 0, 1);\nconst PivotControls = /*#__PURE__*/React.forwardRef((_ref, fRef) => {\n  let {\n    matrix,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    autoTransform = true,\n    anchor,\n    disableAxes = false,\n    disableSliders = false,\n    disableRotations = false,\n    activeAxes = [true, true, true],\n    offset = [0, 0, 0],\n    rotation = [0, 0, 0],\n    scale = 1,\n    lineWidth = 4,\n    fixed = false,\n    rotationLimits,\n    depthTest = true,\n    axisColors = ['#ff2060', '#20df80', '#2080ff'],\n    hoveredColor = '#ffff40',\n    opacity = 1,\n    visible = true,\n    userData,\n    children\n  } = _ref;\n  extend({\n    MeshLine,\n    MeshLineMaterial\n  });\n  const invalidate = useThree(state => state.invalidate);\n  const parentRef = React.useRef(null);\n  const ref = React.useRef(null);\n  const gizmoRef = React.useRef(null);\n  const childrenRef = React.useRef(null);\n  React.useLayoutEffect(() => {\n    if (!anchor) return;\n    childrenRef.current.updateWorldMatrix(true, true);\n    mPInv.copy(childrenRef.current.matrixWorld).invert();\n    bb.makeEmpty();\n    childrenRef.current.traverse(obj => {\n      if (!obj.geometry) return;\n      if (!obj.geometry.boundingBox) obj.geometry.computeBoundingBox();\n      mL.copy(obj.matrixWorld).premultiply(mPInv);\n      bbObj.copy(obj.geometry.boundingBox);\n      bbObj.applyMatrix4(mL);\n      bb.union(bbObj);\n    });\n    vCenter.copy(bb.max).add(bb.min).multiplyScalar(0.5);\n    vSize.copy(bb.max).sub(bb.min).multiplyScalar(0.5);\n    vAnchorOffset.copy(vSize).multiply(new THREE.Vector3(...anchor)).add(vCenter);\n    vPosition.set(...offset).add(vAnchorOffset);\n    gizmoRef.current.position.copy(vPosition);\n    invalidate();\n  });\n  const config = React.useMemo(() => ({\n    onDragStart: () => {\n      mL0.copy(ref.current.matrix);\n      mW0.copy(ref.current.matrixWorld);\n      onDragStart && onDragStart();\n      invalidate();\n    },\n    onDrag: mdW => {\n      mP.copy(parentRef.current.matrixWorld);\n      mPInv.copy(mP).invert(); // After applying the delta\n\n      mW.copy(mW0).premultiply(mdW);\n      mL.copy(mW).premultiply(mPInv);\n      mL0Inv.copy(mL0).invert();\n      mdL.copy(mL).multiply(mL0Inv);\n      if (autoTransform) ref.current.matrix.copy(mL);\n      onDrag && onDrag(mL, mdL, mW, mdW);\n      invalidate();\n    },\n    onDragEnd: () => {\n      if (onDragEnd) onDragEnd();\n      invalidate();\n    },\n    rotationLimits,\n    axisColors,\n    hoveredColor,\n    opacity,\n    scale,\n    lineWidth,\n    fixed,\n    depthTest,\n    userData\n  }), [onDragStart, onDrag, onDragEnd, rotationLimits, depthTest, scale, lineWidth, fixed, ...axisColors, hoveredColor, opacity, userData, autoTransform]);\n  const vec = new THREE.Vector3();\n  useFrame(state => {\n    if (fixed) {\n      const sf = calculateScaleFactor(gizmoRef.current.getWorldPosition(vec), scale, state.camera, state.size);\n      if (gizmoRef.current) {\n        var _gizmoRef$current, _gizmoRef$current2, _gizmoRef$current3;\n        if (((_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.scale.x) !== sf || ((_gizmoRef$current2 = gizmoRef.current) == null ? void 0 : _gizmoRef$current2.scale.y) !== sf || ((_gizmoRef$current3 = gizmoRef.current) == null ? void 0 : _gizmoRef$current3.scale.z) !== sf) {\n          gizmoRef.current.scale.setScalar(sf);\n          state.invalidate();\n        }\n      }\n    }\n  });\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: config\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: parentRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref,\n    matrix: matrix,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    visible: visible,\n    ref: gizmoRef,\n    position: offset,\n    rotation: rotation\n  }, !disableAxes && activeAxes[0] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 0,\n    direction: xDir\n  }), !disableAxes && activeAxes[1] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 1,\n    direction: yDir\n  }), !disableAxes && activeAxes[2] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 2,\n    direction: zDir\n  }), !disableSliders && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableSliders && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableSliders && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableRotations && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableRotations && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableRotations && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    ref: childrenRef\n  }, children))));\n});\nexport { PivotControls, calculateScaleFactor };","map":{"version":3,"names":["THREE","React","extend","useThree","useFrame","MeshLine","MeshLineMaterial","AxisArrow","PlaneSlider","AxisRotator","context","tV0","Vector3","tV1","tV2","getPoint2","point3","camera","size","widthHalf","width","heightHalf","height","updateMatrixWorld","vector","project","x","y","getPoint3","point2","zValue","arguments","length","undefined","set","unproject","calculateScaleFactor","radiusPx","copy","scale","i","point2off","setComponent","getComponent","point3off","z","Math","max","distanceTo","mL0","Matrix4","mW0","mP","mPInv","mW","mL","mL0Inv","mdL","bb","Box3","bbObj","vCenter","vSize","vAnchorOffset","vPosition","xDir","yDir","zDir","PivotControls","forwardRef","_ref","fRef","matrix","onDragStart","onDrag","onDragEnd","autoTransform","anchor","disableAxes","disableSliders","disableRotations","activeAxes","offset","rotation","lineWidth","fixed","rotationLimits","depthTest","axisColors","hoveredColor","opacity","visible","userData","children","invalidate","state","parentRef","useRef","ref","gizmoRef","childrenRef","useLayoutEffect","current","updateWorldMatrix","matrixWorld","invert","makeEmpty","traverse","obj","geometry","boundingBox","computeBoundingBox","premultiply","applyMatrix4","union","add","min","multiplyScalar","sub","multiply","position","config","useMemo","mdW","vec","sf","getWorldPosition","_gizmoRef$current","_gizmoRef$current2","_gizmoRef$current3","setScalar","useImperativeHandle","createElement","Provider","value","matrixAutoUpdate","axis","direction","dir1","dir2"],"sources":["C:/Users/lifes/OneDrive/Desktop/Projects/3D Apple Landing Page/Apple-iphone-3d-landing-page-starter-Code/node_modules/@react-three/drei/core/pivotControls/index.js"],"sourcesContent":["import * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { MeshLine, MeshLineMaterial } from 'meshline';\nimport { AxisArrow } from './AxisArrow.js';\nimport { PlaneSlider } from './PlaneSlider.js';\nimport { AxisRotator } from './AxisRotator.js';\nimport { context } from './context.js';\n\nconst tV0 = new THREE.Vector3();\nconst tV1 = new THREE.Vector3();\nconst tV2 = new THREE.Vector3();\n\nconst getPoint2 = (point3, camera, size) => {\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  camera.updateMatrixWorld(false);\n  const vector = point3.project(camera);\n  vector.x = vector.x * widthHalf + widthHalf;\n  vector.y = -(vector.y * heightHalf) + heightHalf;\n  return vector;\n};\n\nconst getPoint3 = (point2, camera, size, zValue = 1) => {\n  const vector = tV0.set(point2.x / size.width * 2 - 1, -(point2.y / size.height) * 2 + 1, zValue);\n  vector.unproject(camera);\n  return vector;\n};\n\nconst calculateScaleFactor = (point3, radiusPx, camera, size) => {\n  const point2 = getPoint2(tV2.copy(point3), camera, size);\n  let scale = 0;\n\n  for (let i = 0; i < 2; ++i) {\n    const point2off = tV1.copy(point2).setComponent(i, point2.getComponent(i) + radiusPx);\n    const point3off = getPoint3(point2off, camera, size, point2off.z);\n    scale = Math.max(scale, point3.distanceTo(point3off));\n  }\n\n  return scale;\n};\nconst mL0 = new THREE.Matrix4();\nconst mW0 = new THREE.Matrix4();\nconst mP = new THREE.Matrix4();\nconst mPInv = new THREE.Matrix4();\nconst mW = new THREE.Matrix4();\nconst mL = new THREE.Matrix4();\nconst mL0Inv = new THREE.Matrix4();\nconst mdL = new THREE.Matrix4();\nconst bb = new THREE.Box3();\nconst bbObj = new THREE.Box3();\nconst vCenter = new THREE.Vector3();\nconst vSize = new THREE.Vector3();\nconst vAnchorOffset = new THREE.Vector3();\nconst vPosition = new THREE.Vector3();\nconst xDir = new THREE.Vector3(1, 0, 0);\nconst yDir = new THREE.Vector3(0, 1, 0);\nconst zDir = new THREE.Vector3(0, 0, 1);\nconst PivotControls = /*#__PURE__*/React.forwardRef(({\n  matrix,\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  autoTransform = true,\n  anchor,\n  disableAxes = false,\n  disableSliders = false,\n  disableRotations = false,\n  activeAxes = [true, true, true],\n  offset = [0, 0, 0],\n  rotation = [0, 0, 0],\n  scale = 1,\n  lineWidth = 4,\n  fixed = false,\n  rotationLimits,\n  depthTest = true,\n  axisColors = ['#ff2060', '#20df80', '#2080ff'],\n  hoveredColor = '#ffff40',\n  opacity = 1,\n  visible = true,\n  userData,\n  children\n}, fRef) => {\n  extend({\n    MeshLine,\n    MeshLineMaterial\n  });\n  const invalidate = useThree(state => state.invalidate);\n  const parentRef = React.useRef(null);\n  const ref = React.useRef(null);\n  const gizmoRef = React.useRef(null);\n  const childrenRef = React.useRef(null);\n  React.useLayoutEffect(() => {\n    if (!anchor) return;\n    childrenRef.current.updateWorldMatrix(true, true);\n    mPInv.copy(childrenRef.current.matrixWorld).invert();\n    bb.makeEmpty();\n    childrenRef.current.traverse(obj => {\n      if (!obj.geometry) return;\n      if (!obj.geometry.boundingBox) obj.geometry.computeBoundingBox();\n      mL.copy(obj.matrixWorld).premultiply(mPInv);\n      bbObj.copy(obj.geometry.boundingBox);\n      bbObj.applyMatrix4(mL);\n      bb.union(bbObj);\n    });\n    vCenter.copy(bb.max).add(bb.min).multiplyScalar(0.5);\n    vSize.copy(bb.max).sub(bb.min).multiplyScalar(0.5);\n    vAnchorOffset.copy(vSize).multiply(new THREE.Vector3(...anchor)).add(vCenter);\n    vPosition.set(...offset).add(vAnchorOffset);\n    gizmoRef.current.position.copy(vPosition);\n    invalidate();\n  });\n  const config = React.useMemo(() => ({\n    onDragStart: () => {\n      mL0.copy(ref.current.matrix);\n      mW0.copy(ref.current.matrixWorld);\n      onDragStart && onDragStart();\n      invalidate();\n    },\n    onDrag: mdW => {\n      mP.copy(parentRef.current.matrixWorld);\n      mPInv.copy(mP).invert(); // After applying the delta\n\n      mW.copy(mW0).premultiply(mdW);\n      mL.copy(mW).premultiply(mPInv);\n      mL0Inv.copy(mL0).invert();\n      mdL.copy(mL).multiply(mL0Inv);\n      if (autoTransform) ref.current.matrix.copy(mL);\n      onDrag && onDrag(mL, mdL, mW, mdW);\n      invalidate();\n    },\n    onDragEnd: () => {\n      if (onDragEnd) onDragEnd();\n      invalidate();\n    },\n    rotationLimits,\n    axisColors,\n    hoveredColor,\n    opacity,\n    scale,\n    lineWidth,\n    fixed,\n    depthTest,\n    userData\n  }), [onDragStart, onDrag, onDragEnd, rotationLimits, depthTest, scale, lineWidth, fixed, ...axisColors, hoveredColor, opacity, userData, autoTransform]);\n  const vec = new THREE.Vector3();\n  useFrame(state => {\n    if (fixed) {\n      const sf = calculateScaleFactor(gizmoRef.current.getWorldPosition(vec), scale, state.camera, state.size);\n\n      if (gizmoRef.current) {\n        var _gizmoRef$current, _gizmoRef$current2, _gizmoRef$current3;\n\n        if (((_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.scale.x) !== sf || ((_gizmoRef$current2 = gizmoRef.current) == null ? void 0 : _gizmoRef$current2.scale.y) !== sf || ((_gizmoRef$current3 = gizmoRef.current) == null ? void 0 : _gizmoRef$current3.scale.z) !== sf) {\n          gizmoRef.current.scale.setScalar(sf);\n          state.invalidate();\n        }\n      }\n    }\n  });\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: config\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: parentRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref,\n    matrix: matrix,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    visible: visible,\n    ref: gizmoRef,\n    position: offset,\n    rotation: rotation\n  }, !disableAxes && activeAxes[0] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 0,\n    direction: xDir\n  }), !disableAxes && activeAxes[1] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 1,\n    direction: yDir\n  }), !disableAxes && activeAxes[2] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 2,\n    direction: zDir\n  }), !disableSliders && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableSliders && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableSliders && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableRotations && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableRotations && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableRotations && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    ref: childrenRef\n  }, children))));\n});\n\nexport { PivotControls, calculateScaleFactor };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}